Subjects Management - Teacher Guide and Refactor Plan

Overview
- Teachers can manage their own subject list under Settings -> Subjects.
- Subjects are stored per-teacher in Firestore collection `subjects` with fields: { name, code, color?, userId, createdAt, updatedAt }.
- UI components should reference this dynamic list instead of hard-coded subjects.

Teacher Workflow
1. Open Settings -> Subjects
2. Add Subject: Provide Name (e.g., English Language Arts) and Code (e.g., ELA). Save.
3. Edit Subject: Update Name/Code to reflect local naming.
4. Delete Subject: Remove a subject you no longer teach.

Impact Areas To Update (remove hard-coded subjects)
- src/components/standards/StandardsBrowser.jsx: Subject filter now populated via subjectsService.getSubjects().
- src/components/standards/StandardEditor.jsx: Subject select now lists teacher subjects dynamically.
- Reports filters (e.g., src/components/reports/ReportFilters.jsx): Replace static options (English, Social Studies, Both) with subjects from subjectsService.
- Assignment creation (src/components/assignments/EnhancedAssignmentForm.jsx): Subject field should use dynamic subjects list; categories can remain per-subject or be teacher-configurable later.
- Any other selects or filters referencing subjects should adopt subjectsService.getSubjects().

Data Model
- Firestore: subjects (per teacher)
  - id (doc id), name (string), code (string), color (string|null), userId (string), createdAt, updatedAt

Best Practices
- Store subject in data using code (stable key) and render using name.
- When a subject is deleted, decide whether to:
  - Keep historic records referencing the old code (recommended) or
  - Migrate records to a new code (requires a migration job).

Future (v2) Enhancements
- Subject categories and grading weights per subject.
- Per-subject standards presets and mappings.
- Organization-level subjects shared across teachers.

Migration Notes
- Existing data with subject strings should be left as-is; new UIs should map to current subjects list when possible.
- Audit places where subject is stringly typed; prefer a constants layer or subjectsService.

Deployment
- Ensure Firestore rules allow CRUD on subjects for the owner (userId == auth.uid).
- Rollout: Feature-flag dynamic subjects in areas beyond Standards/Settings if needed.
